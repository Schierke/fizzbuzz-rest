// Code generated by MockGen. DO NOT EDIT.
// Source: internal/handler/fizzbuzz_handler.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	entity "fizzbuzz/internal/domain/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFizzBuzzService is a mock of FizzBuzzService interface.
type MockFizzBuzzService struct {
	ctrl     *gomock.Controller
	recorder *MockFizzBuzzServiceMockRecorder
}

// MockFizzBuzzServiceMockRecorder is the mock recorder for MockFizzBuzzService.
type MockFizzBuzzServiceMockRecorder struct {
	mock *MockFizzBuzzService
}

// NewMockFizzBuzzService creates a new mock instance.
func NewMockFizzBuzzService(ctrl *gomock.Controller) *MockFizzBuzzService {
	mock := &MockFizzBuzzService{ctrl: ctrl}
	mock.recorder = &MockFizzBuzzServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFizzBuzzService) EXPECT() *MockFizzBuzzServiceMockRecorder {
	return m.recorder
}

// CalculateFizzBuzz mocks base method.
func (m *MockFizzBuzzService) CalculateFizzBuzz(arg0 context.Context, arg1 *entity.FizzBuzz) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CalculateFizzBuzz", arg0, arg1)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CalculateFizzBuzz indicates an expected call of CalculateFizzBuzz.
func (mr *MockFizzBuzzServiceMockRecorder) CalculateFizzBuzz(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CalculateFizzBuzz", reflect.TypeOf((*MockFizzBuzzService)(nil).CalculateFizzBuzz), arg0, arg1)
}

// GetMostFrequentRequest mocks base method.
func (m *MockFizzBuzzService) GetMostFrequentRequest(arg0 context.Context) (*entity.FizzBuzz, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMostFrequentRequest", arg0)
	ret0, _ := ret[0].(*entity.FizzBuzz)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetMostFrequentRequest indicates an expected call of GetMostFrequentRequest.
func (mr *MockFizzBuzzServiceMockRecorder) GetMostFrequentRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMostFrequentRequest", reflect.TypeOf((*MockFizzBuzzService)(nil).GetMostFrequentRequest), arg0)
}
