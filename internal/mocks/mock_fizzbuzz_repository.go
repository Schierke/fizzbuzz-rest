// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/service/fizzbuzz_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	entity "fizzbuzz/internal/domain/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFizzBuzzStorage is a mock of FizzBuzzStorage interface.
type MockFizzBuzzStorage struct {
	ctrl     *gomock.Controller
	recorder *MockFizzBuzzStorageMockRecorder
}

// MockFizzBuzzStorageMockRecorder is the mock recorder for MockFizzBuzzStorage.
type MockFizzBuzzStorageMockRecorder struct {
	mock *MockFizzBuzzStorage
}

// NewMockFizzBuzzStorage creates a new mock instance.
func NewMockFizzBuzzStorage(ctrl *gomock.Controller) *MockFizzBuzzStorage {
	mock := &MockFizzBuzzStorage{ctrl: ctrl}
	mock.recorder = &MockFizzBuzzStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFizzBuzzStorage) EXPECT() *MockFizzBuzzStorageMockRecorder {
	return m.recorder
}

// GetMostFrequentRequest mocks base method.
func (m *MockFizzBuzzStorage) GetMostFrequentRequest(arg0 context.Context) (*entity.FizzBuzz, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMostFrequentRequest", arg0)
	ret0, _ := ret[0].(*entity.FizzBuzz)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetMostFrequentRequest indicates an expected call of GetMostFrequentRequest.
func (mr *MockFizzBuzzStorageMockRecorder) GetMostFrequentRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMostFrequentRequest", reflect.TypeOf((*MockFizzBuzzStorage)(nil).GetMostFrequentRequest), arg0)
}

// SaveFizzbuzz mocks base method.
func (m *MockFizzBuzzStorage) SaveFizzbuzz(arg0 context.Context, arg1 *entity.FizzBuzz) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveFizzbuzz", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveFizzbuzz indicates an expected call of SaveFizzbuzz.
func (mr *MockFizzBuzzStorageMockRecorder) SaveFizzbuzz(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFizzbuzz", reflect.TypeOf((*MockFizzBuzzStorage)(nil).SaveFizzbuzz), arg0, arg1)
}
